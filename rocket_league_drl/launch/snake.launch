<launch>
  <arg name="training"  default="false"/>
  <arg name="render"    default="false"/>

  <arg name="log_weights"       default="false"/>
  <arg name="log_progress"      default="false"/>
  <arg name="log_name"          default="snake_drl"/>

  <arg name="rate"          default="10.0"/>
  <arg name="size"          default="7"/>
  <arg name="num_episodes"  default="5000"/>
  <arg name="agent_type"    default="dqn"/>

  <param name="/use_sim_time" value="$(arg training)"/>

  <node type="snake_node" pkg="snakesim" name="snake_node" output="screen">
    <param name="render/enabled"          value="$(arg render)"/>
    <param name="snake/initial_segments"  value="$(arg size)"/>
    <param name="snake/growth"            value="0"/>
    <param name="rate"                    value="$(arg rate)"/>
  </node>

  <node type="run_drl.py" pkg="rocket_league_drl" name="snake_drl" output="screen" args="snake $(eval 'train' if training else 'eval')">
    <param name="num_segments"    value="$(arg size)"/>
    <param name="rate"            value="$(arg rate)"/>
    <param name="num_episodes"    value="$(arg num_episodes)"/>
    <param name="agent_type"      value="$(arg agent_type)"/>

    <rosparam command="load" file="$(find rocket_league_drl)/params/snake.yaml"/>
    <rosparam command="load" ns="dqn" file="$(find rocket_league_drl)/params/dqn.yaml"/>
    <rosparam command="load" ns="vac" file="$(find rocket_league_drl)/params/vac.yaml"/>
  </node>

  <node if="$(arg log_weights)" type="logger" pkg="rocket_league_drl" name="logger" output="screen">
    <param name="log_dir" value="/home/$(optenv USER)/catkin_ws/data/$(arg log_name)/"/>
    <rosparam command="load" file="$(find rocket_league_drl)/params/logs.yaml"/>
  </node>

  <node if="$(arg log_progress)" type="plotter" pkg="rocket_league_drl" name="plotter" output="screen">
    <param name="log_dir" value="/home/$(optenv USER)/catkin_ws/data/$(arg log_name)/"/>
    <rosparam command="load" file="$(find rocket_league_drl)/params/logs.yaml"/>
  </node>
</launch>
