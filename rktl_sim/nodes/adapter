#!/usr/bin/env python3
"""Node to match sim parameters to bag data.
License:
  BSD 3-Clause License
  Copyright (c) 2022, Autonomous Robotics Club of Purdue (Purdue ARC)
  All rights reserved.
"""

import rospy
import rosbag
import roslaunch

from simulator import Sim

props = {
  'engine': None,
  'dynamics': None,
}

rospy.init_node('adapter')
urdf_paths = rospy.get_param('~urdf')

spawn_bounds = [[-1.0, 1.0], [-1.0, 1.0], [0.05, 0.05]]

sim = Sim(props=props, urdf_paths=urdf_paths, spawn_bounds=spawn_bounds, render_enabled=True)

bag = rosbag.Bag(rospy.get_param('~bag_file'))

init_car_pose = None
init_ball_pose = None
for topic, msg, t in bag.read_messages():
  if topic == '/cars/car0/pose_sync' and init_car_pose is None:
    init_car_pose = msg.pose
  elif topic == '/ball/pose_sync' and init_ball_pose is None:
    init_ball_pose = msg.pose
  if init_car_pose is not None and init_ball_pose is not None:
    break

print(init_car_pose, init_ball_pose)

bag.close()

# Create a population of sims with randomly initialized params

# Parse bag

# Run population on bag inputs

# Compare with bag outputs

# Generate offspring

# Repeat